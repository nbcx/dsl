// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: broadcast_protobuf.proto

package protobuf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 发送消息
type BroadcastReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq     string `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"`          // 序列号
	UserId  string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`    // 用户ID
	Cms     string `protobuf:"bytes,4,opt,name=cms,proto3" json:"cms,omitempty"`          // cms 动作: msg/enter/exit
	Type    string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`        // type 消息类型，默认是 text
	Msg     string `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`          // msg
	IsLocal bool   `protobuf:"varint,7,opt,name=isLocal,proto3" json:"isLocal,omitempty"` // 是否查询本机 acc内部调用为:true(本机查询不到即结束)
}

func (x *BroadcastReq) Reset() {
	*x = BroadcastReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broadcast_protobuf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastReq) ProtoMessage() {}

func (x *BroadcastReq) ProtoReflect() protoreflect.Message {
	mi := &file_broadcast_protobuf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastReq.ProtoReflect.Descriptor instead.
func (*BroadcastReq) Descriptor() ([]byte, []int) {
	return file_broadcast_protobuf_proto_rawDescGZIP(), []int{0}
}

func (x *BroadcastReq) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *BroadcastReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BroadcastReq) GetCms() string {
	if x != nil {
		return x.Cms
	}
	return ""
}

func (x *BroadcastReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BroadcastReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BroadcastReq) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

type BroadcastRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode   uint32 `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	ErrMsg    string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	SendMsgId string `protobuf:"bytes,3,opt,name=sendMsgId,proto3" json:"sendMsgId,omitempty"`
}

func (x *BroadcastRsp) Reset() {
	*x = BroadcastRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broadcast_protobuf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastRsp) ProtoMessage() {}

func (x *BroadcastRsp) ProtoReflect() protoreflect.Message {
	mi := &file_broadcast_protobuf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastRsp.ProtoReflect.Descriptor instead.
func (*BroadcastRsp) Descriptor() ([]byte, []int) {
	return file_broadcast_protobuf_proto_rawDescGZIP(), []int{1}
}

func (x *BroadcastRsp) GetRetCode() uint32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *BroadcastRsp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *BroadcastRsp) GetSendMsgId() string {
	if x != nil {
		return x.SendMsgId
	}
	return ""
}

var File_broadcast_protobuf_proto protoreflect.FileDescriptor

var file_broadcast_protobuf_proto_rawDesc = []byte{
	0x0a, 0x18, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x22, 0x5e, 0x0a, 0x0c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x32, 0xe9, 0x02, 0x0a, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x02, 0x46, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x03, 0x55, 0x69, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x03, 0x41,
	0x70, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x2c, 0x0a,
	0x19, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x0d, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_broadcast_protobuf_proto_rawDescOnce sync.Once
	file_broadcast_protobuf_proto_rawDescData = file_broadcast_protobuf_proto_rawDesc
)

func file_broadcast_protobuf_proto_rawDescGZIP() []byte {
	file_broadcast_protobuf_proto_rawDescOnce.Do(func() {
		file_broadcast_protobuf_proto_rawDescData = protoimpl.X.CompressGZIP(file_broadcast_protobuf_proto_rawDescData)
	})
	return file_broadcast_protobuf_proto_rawDescData
}

var file_broadcast_protobuf_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_broadcast_protobuf_proto_goTypes = []interface{}{
	(*BroadcastReq)(nil), // 0: protobuf.BroadcastReq
	(*BroadcastRsp)(nil), // 1: protobuf.BroadcastRsp
}
var file_broadcast_protobuf_proto_depIdxs = []int32{
	0, // 0: protobuf.BroadcastServer.Fd:input_type -> protobuf.BroadcastReq
	0, // 1: protobuf.BroadcastServer.Uid:input_type -> protobuf.BroadcastReq
	0, // 2: protobuf.BroadcastServer.User:input_type -> protobuf.BroadcastReq
	0, // 3: protobuf.BroadcastServer.Group:input_type -> protobuf.BroadcastReq
	0, // 4: protobuf.BroadcastServer.App:input_type -> protobuf.BroadcastReq
	0, // 5: protobuf.BroadcastServer.All:input_type -> protobuf.BroadcastReq
	1, // 6: protobuf.BroadcastServer.Fd:output_type -> protobuf.BroadcastRsp
	1, // 7: protobuf.BroadcastServer.Uid:output_type -> protobuf.BroadcastRsp
	1, // 8: protobuf.BroadcastServer.User:output_type -> protobuf.BroadcastRsp
	1, // 9: protobuf.BroadcastServer.Group:output_type -> protobuf.BroadcastRsp
	1, // 10: protobuf.BroadcastServer.App:output_type -> protobuf.BroadcastRsp
	1, // 11: protobuf.BroadcastServer.All:output_type -> protobuf.BroadcastRsp
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_broadcast_protobuf_proto_init() }
func file_broadcast_protobuf_proto_init() {
	if File_broadcast_protobuf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_broadcast_protobuf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broadcast_protobuf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_broadcast_protobuf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_broadcast_protobuf_proto_goTypes,
		DependencyIndexes: file_broadcast_protobuf_proto_depIdxs,
		MessageInfos:      file_broadcast_protobuf_proto_msgTypes,
	}.Build()
	File_broadcast_protobuf_proto = out.File
	file_broadcast_protobuf_proto_rawDesc = nil
	file_broadcast_protobuf_proto_goTypes = nil
	file_broadcast_protobuf_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BroadcastServerClient is the client API for BroadcastServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BroadcastServerClient interface {
	// 向fd发送消息
	Fd(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error)
	// 向用户发送消息
	Uid(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error)
	// 向用户发送消息
	User(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error)
	// 向组发送消息
	Group(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error)
	// 向app发送消息
	App(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error)
	// 向所有连接发送消息
	All(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error)
}

type broadcastServerClient struct {
	cc grpc.ClientConnInterface
}

func NewBroadcastServerClient(cc grpc.ClientConnInterface) BroadcastServerClient {
	return &broadcastServerClient{cc}
}

func (c *broadcastServerClient) Fd(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error) {
	out := new(BroadcastRsp)
	err := c.cc.Invoke(ctx, "/protobuf.BroadcastServer/Fd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *broadcastServerClient) Uid(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error) {
	out := new(BroadcastRsp)
	err := c.cc.Invoke(ctx, "/protobuf.BroadcastServer/Uid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *broadcastServerClient) User(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error) {
	out := new(BroadcastRsp)
	err := c.cc.Invoke(ctx, "/protobuf.BroadcastServer/User", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *broadcastServerClient) Group(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error) {
	out := new(BroadcastRsp)
	err := c.cc.Invoke(ctx, "/protobuf.BroadcastServer/Group", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *broadcastServerClient) App(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error) {
	out := new(BroadcastRsp)
	err := c.cc.Invoke(ctx, "/protobuf.BroadcastServer/App", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *broadcastServerClient) All(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRsp, error) {
	out := new(BroadcastRsp)
	err := c.cc.Invoke(ctx, "/protobuf.BroadcastServer/All", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BroadcastServerServer is the server API for BroadcastServer service.
type BroadcastServerServer interface {
	// 向fd发送消息
	Fd(context.Context, *BroadcastReq) (*BroadcastRsp, error)
	// 向用户发送消息
	Uid(context.Context, *BroadcastReq) (*BroadcastRsp, error)
	// 向用户发送消息
	User(context.Context, *BroadcastReq) (*BroadcastRsp, error)
	// 向组发送消息
	Group(context.Context, *BroadcastReq) (*BroadcastRsp, error)
	// 向app发送消息
	App(context.Context, *BroadcastReq) (*BroadcastRsp, error)
	// 向所有连接发送消息
	All(context.Context, *BroadcastReq) (*BroadcastRsp, error)
}

// UnimplementedBroadcastServerServer can be embedded to have forward compatible implementations.
type UnimplementedBroadcastServerServer struct {
}

func (*UnimplementedBroadcastServerServer) Fd(context.Context, *BroadcastReq) (*BroadcastRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fd not implemented")
}
func (*UnimplementedBroadcastServerServer) Uid(context.Context, *BroadcastReq) (*BroadcastRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Uid not implemented")
}
func (*UnimplementedBroadcastServerServer) User(context.Context, *BroadcastReq) (*BroadcastRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method User not implemented")
}
func (*UnimplementedBroadcastServerServer) Group(context.Context, *BroadcastReq) (*BroadcastRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Group not implemented")
}
func (*UnimplementedBroadcastServerServer) App(context.Context, *BroadcastReq) (*BroadcastRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method App not implemented")
}
func (*UnimplementedBroadcastServerServer) All(context.Context, *BroadcastReq) (*BroadcastRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method All not implemented")
}

func RegisterBroadcastServerServer(s *grpc.Server, srv BroadcastServerServer) {
	s.RegisterService(&_BroadcastServer_serviceDesc, srv)
}

func _BroadcastServer_Fd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastServerServer).Fd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.BroadcastServer/Fd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastServerServer).Fd(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BroadcastServer_Uid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastServerServer).Uid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.BroadcastServer/Uid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastServerServer).Uid(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BroadcastServer_User_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastServerServer).User(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.BroadcastServer/User",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastServerServer).User(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BroadcastServer_Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastServerServer).Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.BroadcastServer/Group",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastServerServer).Group(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BroadcastServer_App_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastServerServer).App(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.BroadcastServer/App",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastServerServer).App(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BroadcastServer_All_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastServerServer).All(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.BroadcastServer/All",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastServerServer).All(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _BroadcastServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.BroadcastServer",
	HandlerType: (*BroadcastServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fd",
			Handler:    _BroadcastServer_Fd_Handler,
		},
		{
			MethodName: "Uid",
			Handler:    _BroadcastServer_Uid_Handler,
		},
		{
			MethodName: "User",
			Handler:    _BroadcastServer_User_Handler,
		},
		{
			MethodName: "Group",
			Handler:    _BroadcastServer_Group_Handler,
		},
		{
			MethodName: "App",
			Handler:    _BroadcastServer_App_Handler,
		},
		{
			MethodName: "All",
			Handler:    _BroadcastServer_All_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "broadcast_protobuf.proto",
}
